"use strict";var detailsCard,cardholderInput,cardholderOutput,cardNumberInput,cardNumberOutput,expirationMonthInput,expirationMonthOutput,expirationYearInput,expirationYearOutput,cvcNumberInput,cvcNumberOutput,submitBtn,continueBtn,DEFAULT_CARDHOLDER="Jane appleseed",DEFAULT_CARD_NUMBER="0000 0000 0000 0000",DEFAULT_EXPIRATION_MONTH="00",DEFAULT_EXPIRATION_YEAR="00",DEFAULT_CVC="000",main=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){detailsCard=document.querySelector(".details"),cardholderInput=document.querySelector("#cardholder-name"),cardholderOutput=document.querySelector("#cardholder-name-output"),cardNumberInput=document.querySelector("#card-number"),cardNumberOutput=document.querySelector("#card-number-output"),expirationMonthInput=document.querySelector("#expiration-month"),expirationMonthOutput=document.querySelector("#expiration-month-output"),expirationYearInput=document.querySelector("#expiration-year"),expirationYearOutput=document.querySelector("#expiration-year-output"),cvcNumberInput=document.querySelector("#card-cvc"),cvcNumberOutput=document.querySelector("#card-cvc-output"),submitBtn=document.querySelector("#details-submit-button"),continueBtn=document.querySelector("#confirmation-button")},prepareDOMEvents=function(){cardholderInput.addEventListener("input",handleCardholderName),cardholderInput.addEventListener("focusout",handleCardholderName),cardNumberInput.addEventListener("input",handleCardNumber),cardNumberInput.addEventListener("focusout",handleCardNumber),expirationMonthInput.addEventListener("input",handleExpirationMonth),expirationMonthInput.addEventListener("focusout",handleExpirationMonth),expirationYearInput.addEventListener("input",handleExpirationYear),expirationYearInput.addEventListener("focusout",handleExpirationYear),cvcNumberInput.addEventListener("input",handleCVCNumber),cvcNumberInput.addEventListener("focusout",handleCVCNumber),submitBtn.addEventListener("click",handleSubmitBtn),continueBtn.addEventListener("click",handleContinueBtn)},handleCardholderName=function(r){var r=r.target,e=r.value,t=validateCardholderName(e),a=t.isValid,t=t.errorMsg;a?clearError(r):showErrorMessage(r,t),insertOutput(cardholderOutput,e)},validateCardholderName=function(r){r=r.trim();return checkBlank(r)?{isValid:!1,errorMsg:"Can't be blank"}:{isValid:!0,errorMsg:""}},checkBlank=function(r){return""===r},handleCardNumber=function(r){var r=r.target,e=removeSpaces(r.value),t=validateCardNumber(e),a=t.isValid,t=t.errorMsg;r.value=groupCardNumber(e,4),a?clearError(r):showErrorMessage(r,t),insertOutput(cardNumberOutput,formatCardNumber(e))},validateCardNumber=function(r){var r=removeSpaces(r),e=checkBlank(r),t=/^[^\D]+$/.test(r),r=16===r.length;return e?{isValid:!1,errorMsg:"Can't be blank"}:t?r?{isValid:!0,errorMsg:""}:{isValid:!1,errorMsg:"Too short"}:{isValid:!1,errorMsg:"Wrong format, numbers only"}},formatCardNumber=function(r){r=removeSpaces(r).padEnd(16,"0");return groupCardNumber(r,4)},groupCardNumber=function(r,e){for(var t=[],a=0;a<r.length;a+=e)t.push(r.slice(a,a+e));return t.join(" ")},removeSpaces=function(r){return r.replace(/\s/g,"")},handleExpirationMonth=function(r){var r=r.target,e=r.value.trim(),t=validateExpiration(e,validateExpirationMonth),a=t.isValid,t=t.errorMsg;a?clearError(r):showErrorMessage(r,t),insertOutput(expirationMonthOutput,e)},handleExpirationYear=function(r){var r=r.target,e=r.value.trim(),t=validateExpiration(e,validateExpirationYear),a=t.isValid,t=t.errorMsg;a?clearError(r):showErrorMessage(r,t),insertOutput(expirationYearOutput,e)},validateExpiration=function(r,e){var r=r.trim(),t=checkBlank(r),e=e(r);return t?{isValid:!1,errorMsg:"Can't be blank"}:e?{isValid:!0,errorMsg:""}:{isValid:!1,errorMsg:"Wrong format"}},validateExpirationMonth=function(r){return/^0[1-9]$|^1[0-2]$/.test(r)},validateExpirationYear=function(r){return/^\d{2}$/.test(r)},handleCVCNumber=function(r){var r=r.target,e=r.value,t=validateCVC(e),a=t.isValid,t=t.errorMsg;a?clearError(r):showErrorMessage(r,t),insertOutput(cvcNumberOutput,e)},validateCVC=function(r){var r=r.trim(),e=checkBlank(r),r=/^\d{3}$/.test(r);return e?{isValid:!1,errorMsg:"Can't be blank"}:r?{isValid:!0,errorMsg:""}:{isValid:!1,errorMsg:"Wrong format"}},insertOutput=function(r,e){r.innerText=e},showErrorMessage=function(r,e){r.closest(".details-form__input-container").querySelector(".details-form__error").innerText=e,r.classList.add("error")},clearError=function(r){showErrorMessage(r,""),r.classList.remove("error")},handleSubmitBtn=function(r){r.preventDefault();var r=validateCardholderName(cardNumberInput.value),e=r.isValid,r=r.errorMsg,t=validateCardNumber(cardNumberInput.value),a=t.isValid,t=t.errorMsg,n=validateExpiration(expirationMonthInput.value,validateExpirationMonth),u=n.isValid,n=n.errorMsg,i=validateExpiration(expirationYearInput.value,validateExpirationYear),o=i.isValid,i=i.errorMsg,d=validateCVC(cvcNumberInput.value),c=d.isValid,d=d.errorMsg;e&&a&&u&&o&&c&&detailsCard.setAttribute("data-completed",""),e||showErrorMessage(cardholderInput,r),a||showErrorMessage(cardNumberInput,t),u||showErrorMessage(expirationMonthInput,n),o||showErrorMessage(expirationYearInput,i),c||showErrorMessage(cvcNumberInput,d)},handleContinueBtn=function(r){detailsCard.removeAttribute("data-completed"),clearInputs(),clearOutputs()},clearInputs=function(){cardholderInput.value="",cardNumberInput.value="",expirationMonthInput.value="",expirationYearInput.value="",cvcNumberInput.value=""},clearOutputs=function(){cardholderOutput.innerText=DEFAULT_CARDHOLDER,cardNumberOutput.innerText=DEFAULT_CARD_NUMBER,expirationMonthOutput.innerText=DEFAULT_EXPIRATION_MONTH,expirationYearOutput.innerText=DEFAULT_EXPIRATION_YEAR,cvcNumberOutput.innerText=DEFAULT_CVC};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
